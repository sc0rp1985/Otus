version: "3.9"
services:

  otus_soc_net_postgres:
    container_name: postgresva
    image: postgres
    shm_size: 256mb
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file: .env
    volumes:
       - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    command: >
      postgres -c max_connections=700 -c shared_buffers=512MB
    restart: unless-stopped

  otus_web_api:
    container_name: otus_web_api
    image: otus
    ports:
      - 20220:80
    restart: unless-stopped
    depends_on:
      - otus_soc_net_postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/user/search?firstName=test&secondName=test"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4-alpine  # Последняя стабильная версия Redis на Alpine (лёгкий образ)
    container_name: redis
    ports:
      - "6379:6379"  # Пробрасываем порт Redis на хост
    volumes:
      - redis_data:/data  # Сохраняем данные Redis на хосте
    restart: unless-stopped  # Автоматически перезапускать контейнер, если он упал
    command: redis-server --save 60 1 --loglevel warning  # Периодическое сохранение и уровень логов

  redis-commander:  # Веб-интерфейс для Redis
    image: rediscommander/redis-commander:latest
    ports:
      - "9081:8081"
    environment:
      - REDIS_HOSTS=redis
    depends_on:
      - redis
  

volumes:
    postgres:
    redis_data: